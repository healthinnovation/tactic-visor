---
page-layout: full
comments: false
css: css/map.css
---

```{r}
#| column: screen
#| echo: false
#| message: false
#| warning: false
#| out-height: 100vh
#| out-width: 100%
library(tidyverse)
library(leaflet)
library(htmltools)
library(leaflet.extras)
library(viridis)
library(sf)

processed_path <- "data/processed/"
ccpp_filename <- "ccpp-10km-strata-sample.csv"
ccpp_filepath <- fs::path(processed_path, ccpp_filename)
ccpp <- read_csv(ccpp_filepath) 

centroides <- read_csv("data/raw/centroids_tactic.csv")

df_centroides <- centroides %>%
  transmute(nomcp = NAME, lon, lat)

df_ccpp <- ccpp %>%
  st_drop_geometry() %>%
  transmute(nomcp, lon = lng, lat)

df_todos <- bind_rows(df_ccpp, df_centroides)



# comunidades que quieres descartar manualmente
descartar <- c("CENTRO_POBLADO_12_DE_ABRIL",
               "GRANJA_PORCINA_SAN_LUCAS",
               "VARILLAL")

df_todos_unicos <- df_todos %>%
  filter(!nomcp %in% descartar)

pts <- df_todos_unicos %>%
  st_as_sf(coords = c("lon", "lat"), crs = 4326, remove = FALSE)
library(dplyr)
library(sf)
library(leaflet)
library(leaflet.extras)

library(dplyr)
library(sf)
library(leaflet)
library(leaflet.extras)

# pts: sf con columnas nomcp, lon, lat

# 1) Normalizar nombres a los usados en el mapa
pts_mapa <- pts %>%
  mutate(nom_mapa = case_when(
    nomcp == "PLAYA_DE_LUPUNA"      ~ "LUPUNA",
    nomcp == "EL VARILLAL"          ~ "VARILLAL",
    nomcp == "CEMENTERIO_STO_TOMAS" ~ "SANTO TOMAS",
    nomcp == "SAN_PABLO_DE_CUYANA"  ~ "SAN PABLO DE CUYANA",
    TRUE ~ nomcp
  ))

# 2) Mantener solo las comunidades visibles en la figura
keep <- c(
  "MAZAN","INDIANA","SANTO TOMAS","PADRE COCHA","LUPUNA","QUISTOCOCHA",
  "SAN PABLO DE CUYANA","PARAISO","LLANCHAMA","VARILLAL","SAN LUCAS","12 DE ABRIL"
)

pts_mapa <- pts_mapa %>% 
  filter(nom_mapa %in% keep) %>%
  distinct(nom_mapa, .keep_all = TRUE)   # elimina duplicados por nombre

# 3) Mapa con puntos “vibrando” y el nombre como label
leaflet() %>%
  addTiles() %>%
  addPulseMarkers(
    data  = pts_mapa,
    icon  = makePulseIcon(color = "#1f77b4", heartbeat = 1, iconSize = 12),
    label = ~nom_mapa,
    group = "Communities"
  ) %>%
  addLayersControl(
    baseGroups    = c("OpenStreetMap"),
    overlayGroups = c("Communities"),
    options       = layersControlOptions(collapsed = FALSE)
  )



```
